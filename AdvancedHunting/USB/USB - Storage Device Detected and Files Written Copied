//query DeviceFileEvents and Deviceinfo tables for all loggedon users and written files, then finds occurrences of usb storage plug and play DeviceAlertEvents
//and joins all tables so output shows both USB events, loggedon user, and files written.
//jesse.esquivel@microsoft.com
let fileEvents = DeviceFileEvents
    //| where Timestamp > ago(1d) 
    | where ActionType == "FileCreated"// or ActionType == "FileModified"
    | where FolderPath !startswith "C:"
    | where FolderPath !startswith "\\" 
    | where InitiatingProcessAccountName != "NETWORK SERVICE"
    | where InitiatingProcessAccountName != "SYSTEM"
    | where InitiatingProcessAccountName != "LOCAL SERVICE"
    | project Timestamp, DeviceId, InitiatingProcessAccountName, ActionType, FolderPath, InitiatingProcessCreationTime, ReportId;
let loggedOnUsers = DeviceInfo
    | extend data=parsejson(LoggedOnUsers)
    | mv-expand data
    | extend userName = data.UserName
    | project userName, DeviceId, Timestamp;
DeviceEvents
| where ActionType == 'PnpDeviceConnected'
| extend PNP = parsejson(AdditionalFields) 
| extend ClassName = PNP.ClassName 
| extend PnPDeviceId = PNP.DeviceId 
| extend DeviceDescription = PNP.DeviceDescription
| extend VendorId = split(PNP.VendorIds,@'\r\n\t\t')
| extend VendorId = PNP.VendorIds
| where PnPDeviceId startswith @'USBSTOR\'
| project Timestamp, DeviceName, DeviceId, ClassName, DeviceDescription, PnPDeviceId, VendorId, ReportId
| join kind = inner(loggedOnUsers) on DeviceId
| summarize arg_max(Timestamp1, *) by Timestamp
| project-away DeviceId1, Timestamp1
| join kind = inner(fileEvents) on DeviceId
| sort by Timestamp desc
