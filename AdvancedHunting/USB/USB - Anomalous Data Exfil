//Anomalous Data Exfil - Determine thresholds for x number of files written to removable storage in x amount of time.
//Query DeviceFileEvents and Deviceinfo tables for all loggedon users and written files, then finds occurrences of usb 
//storage PnP DeviceEvents and joins all tables so output shows DeviceName, USB events, loggedon user, files exfild' count,
//and USB device info.
//jesse.esquivel@microsoft.com
let TimeBucket = totimespan(5m); // Define the suspicious timespan threshold
let FileCountPerTimeBucket = 10; //Define the suspicious velocity item copy threshold
let fileEvents = DeviceFileEvents
    | where ActionType == "FileCreated"
    | where FolderPath !startswith "C:"
    | where FolderPath !startswith "\\" 
    | where InitiatingProcessAccountName != "NETWORK SERVICE"
    | where InitiatingProcessAccountName != "SYSTEM"
    | where InitiatingProcessAccountName != "LOCAL SERVICE"
    | extend DriveLetter = tostring(split(FolderPath, '\\')[0])
    | extend Event = pack("Timestamp", Timestamp, "ReportId", ReportId,"ActionType",ActionType,"ShareName",ShareName,
        "FolderPath",FolderPath,"FileSize",FileSize,"DeviceName",DeviceName)
    | summarize Events = makelist(Event), FileCount = dcount(SHA1) by DeviceId, DriveLetter, bin(Timestamp, TimeBucket)
    | where FileCount > FileCountPerTimeBucket
    | mv-expand Events
    | project Timestamp = todatetime(Events.Timestamp), DeviceId, DeviceName = Events.DeviceName, DriveLetter, FileCount, 
        FolderPath = Events.FolderPath, FileSize = Events.FileSize, ReportId = tolong(Events.ReportId);
let loggedOnUsers = DeviceInfo
    | extend data=parsejson(LoggedOnUsers)
    | mv-expand data
    | extend userName = data.UserName
    | project userName, DeviceId, Timestamp;
DeviceEvents
    | where ActionType == 'PnpDeviceConnected'
    | extend PNP = parsejson(AdditionalFields) 
    | extend ClassName = PNP.ClassName 
    | extend PnPDeviceId = PNP.DeviceId 
    | extend DeviceDescription = PNP.DeviceDescription
    | extend VendorId = split(PNP.VendorIds,@'\r\n\t\t')
    | extend VendorId = PNP.VendorIds
    | where PnPDeviceId startswith @'USBSTOR\'
    | project Timestamp, DeviceName, DeviceId, ClassName, DeviceDescription, PnPDeviceId, VendorId, ReportId
    | join kind = inner(loggedOnUsers) on DeviceId
    | join kind = inner(fileEvents) on DeviceId
    | project-away DeviceId1, DeviceId2, Timestamp, Timestamp1, ReportId, DeviceName1
    | summarize arg_max(ReportId1, *) by Timestamp2
    | sort by Timestamp2 desc
